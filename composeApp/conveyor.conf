// This is a hashbang include. You can run the command after the #! to see what
// configuration is being extracted from the Gradle build using the Conveyor plugin.
include "#!../gradlew -q printConveyorConfig"

// This enables native library extraction, which improves app startup time and robustness.
// It's optional but a good idea to have it. You can remove this if you get tired of specifying
// system properties for Java libraries with native components.
//
// See https://hydraulic.dev/blog/11-in-jar-signing.html for more.
include required("https://raw.githubusercontent.com/hydraulic-software/conveyor/master/configs/jvm/extract-native-libraries.conf")

gradle-cache = ${env.HOME}/.gradle    # Note: UNIX specific config!

// Config file documentation: https://conveyor.hydraulic.dev/latest/configs
app {
  // The base URL is where the download site will be placed. Packages will check here for updates.
  
  // When the version control system URL is pointed at github.com, 
  // github releases and pages are used automatically. You just need
  // an API token.
  vcs-url = github.com/ssttkkl/mahjong-utils-app
  license = MIT
  site {
    github {
      oauth-token = ${env.GITHUB_TOKEN}
      pages-branch = gh-pages
    }
  }

  fsname = "mahjong-utils-app"
  display-name = "Riichi Mahjong Calculator"
  rdns-name = "io.ssttkkl.mahjongutils.app"

  mac.inputs += "mac/**"
  mac.info-plist = {
    CFBundleAllowMixedLocalizations = true
  }

  // Use the Compose logo as an icon and include it so we can pass it to the Window constructor.
  icons = icons/icon.png
  windows.inputs += TASK/rendered-icons/windows
  linux.inputs += TASK/rendered-icons/linux

  # Import all the obfuscated JARs, except the JAR that contains the platform native graphics code.
  inputs = [{
    from = build/compose/tmp/main-release/proguard
    remap = [
      "**"
      "-skiko-awt-runtime-*.jar"
    ]
  }]

  # Put the dropped JAR back with the right version for each platform.
  windows.amd64.inputs = ${app.inputs} [ ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-windows-x64/0.8.18/82e10dceacc2cbd6bf765fe18766a21b3d17c3fc/skiko-awt-runtime-windows-x64-0.8.18.jar ]
  mac.amd64.inputs = ${app.inputs} [ ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-macos-x64/0.8.18/cbc71d3fe1a143190127381f6ccf9596226ef8f1/skiko-awt-runtime-macos-x64-0.8.18.jar ]
  mac.aarch64.inputs = ${app.inputs} [ ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-macos-arm64/0.8.18/4eca7e1506845b162f2f8afc8bca8da476517207/skiko-awt-runtime-macos-arm64-0.8.18.jar ]
  linux.amd64.inputs = ${app.inputs} [ ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-linux-x64/0.8.18/7f8bb3d32fe3aa9c6f760c2f000afba3f98504c8/skiko-awt-runtime-linux-x64-0.8.18.jar ]
}

conveyor.compatibility-level = 17
